<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	you under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.venkateshamurthy</groupId>
	<artifactId>design-patterns</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>design-patterns</name>
	<description>This project is about few examples on exploring the design patterns.
	Builders:
	==========
	module: builders - 		This module demonstrate various hues of builder pattern.It creates an autogenerated builder interface. This is mainly useful in cases where developer is required to use all the POJOs that are autogenerated and where he cannot add any Builder interface / annotation directly to the generated code.
	module:builders-usage - This module demonstrates usage.
							builders and builders-usage modules can be built and installed as follows:
							mvn --projects builders clean install
							mvn --projects builders-usage compile test
    module:builder-pojobuilder - This module demonstrate few annotation based builders such as https://github.com/mkarneim/pojobuilder and projectlombok. This is maily useful when developers create POJO (rather than use an autogenerated one)</description>
	<modules>
		<module>builders</module>
		<module>builders-usage</module>
		<module>builders-pojobuilder</module>
	</modules>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.fuin</groupId>
			<artifactId>srcgen4javassist</artifactId>
			<version>0.5.8</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.19.0-GA</version>
		</dependency>
		<dependency>
			<groupId>com.github.davidmarquis</groupId>
			<artifactId>fluent-interface-proxy</artifactId>
			<version>1.3.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<followSymlinks>false</followSymlinks>
									<directory>${basedir}/src/generated/java</directory>
									<includes>
										<include>**/*.java</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- or whatever version you use -->
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.rat</groupId>
				<artifactId>apache-rat-plugin</artifactId>
				<version>0.11</version>
				<configuration>
					<addLicenseHeaders>true</addLicenseHeaders>
					<copyrightMessage>
						Licensed to the Apache Software Foundation (ASF)
						under one
						or more contributor license agreements. See the NOTICE
						file
						distributed with this work for additional information
						regarding copyright ownership. The ASF licenses this file
						to you
						under the Apache License, Version 2.0 (the
						"License"); you may not
						use this file except in compliance
						with the License. You may obtain
						a copy of the License at

						http://www.apache.org/licenses/LICENSE-2.0

						Unless required by
						applicable law or agreed to in writing,
						software distributed under
						the License is distributed on an
						"AS IS" BASIS, WITHOUT WARRANTIES
						OR CONDITIONS OF ANY
						KIND, either express or implied. See the
						License for the
						specific language governing permissions and
						limitations
						under the License.
					</copyrightMessage>
					<excludes>
						<exclude>**/README.*</exclude>
						<exclude>**/git/**</exclude>
						<exclude>**/*LICENSE*</exclude>
						<exclude>**/target/**</exclude>
						<exclude>**/pom.xml</exclude>
						<exclude>**/src/test/resources/**</exclude>
						<exclude>**/src/main/resources/**</exclude>
						<!-- PojoClassBuilder is generated code and hence dont care -->
						<exclude>**/src/main/java/**/PojoClassBuilder*</exclude>
						<exclude>**/src/generated/java/**/*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.3</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<!-- Plugin that gives ability to generate your projects site -->
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<!-- Reports that will be displayed on a generated site -->
					<reportPlugins>
						<!-- Produces a cross-reference of the project's sources. This is useful 
							for other reports like PMD or Checkstyle. When this plugin is used with checkstyle 
							you can see code that produces style warning/error in the report. -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.1</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<!-- Checks projects code conventions -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.6</version>
							<configuration>
								<configLocation>src/main/resources/config/checkstyle.xml</configLocation>
								<excludes>
									**/src/test/**
								</excludes>
								<excludes></excludes>
							</configuration>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<artifactId>maven-clean-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>java</goal>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	<reporting>
		<plugins>

		</plugins>
	</reporting>
</project>